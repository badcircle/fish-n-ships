[gd_resource type="VisualShader" load_steps=3 format=3 uid="uid://cxgytshjia5jf"]

[sub_resource type="VisualShaderNodeColorOp" id="VisualShaderNodeColorOp_ytqpk"]
operator = 4

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_iqm4o"]
constant = Color(0.375956, 0.411576, 1, 1)

[resource]
code = "shader_type spatial;



void fragment() {
// ColorConstant:3
	vec4 n_out3p0 = vec4(0.375956, 0.411576, 1.000000, 1.000000);


	vec3 n_out2p0;
// ColorOp:2
	{
		float base = vec3(n_out3p0.xyz).x;
		float blend = vec3(n_out3p0.xyz).x;
		if (base < 0.5) {
			n_out2p0.x = 2.0 * base * blend;
		} else {
			n_out2p0.x = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}
	{
		float base = vec3(n_out3p0.xyz).y;
		float blend = vec3(n_out3p0.xyz).y;
		if (base < 0.5) {
			n_out2p0.y = 2.0 * base * blend;
		} else {
			n_out2p0.y = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}
	{
		float base = vec3(n_out3p0.xyz).z;
		float blend = vec3(n_out3p0.xyz).z;
		if (base < 0.5) {
			n_out2p0.z = 2.0 * base * blend;
		} else {
			n_out2p0.z = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}


// Output:0
	ALBEDO = n_out2p0;


}
"
graph_offset = Vector2(-226.667, 32.5778)
nodes/fragment/2/node = SubResource("VisualShaderNodeColorOp_ytqpk")
nodes/fragment/2/position = Vector2(80, 220)
nodes/fragment/3/node = SubResource("VisualShaderNodeColorConstant_iqm4o")
nodes/fragment/3/position = Vector2(-200, 240)
nodes/fragment/connections = PackedInt32Array(2, 0, 0, 0, 3, 0, 2, 0, 3, 0, 2, 1)
